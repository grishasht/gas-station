package ua.kpi.dziuba.gasstation.service;

import org.springframework.stereotype.Component;
import ua.kpi.dziuba.gasstation.model.IPump;

import java.util.List;


/**
 * Клас - сервіс, який викликається із відповідного контроллера та
 * використовує відповідний репозиторій для своєї роботи.
 */
@Component
public interface IPumpService {

    /**
     * Метод, який викликається з контроллера для обробки запиту клієнта на
     * видачу списку колонок із пальним. Вилучає все пальне із бази даних
     *
     * @return список вилучених колонок із пальним із бази даних.
     */
    List<IPump> getAllPumps();

    /**
     * Метод, який викликається з контроллера для обробки запиту клієнта на
     * видачу списку колонок із пальним. Вилучає все пальне із бази даних по
     * параметрах назви міста та назви заправної станції
     *
     * @param city - ім'я міста, по якому будуть вилучатися дані із бази
     * @param station - назва станції, по якій будуть вилучатися дані із бази
     * @return список вилучених колонок із пальним із бази даних по заданим
     * параметрам.
     */
    List<IPump> getPumpsByCityAndStation(String city, String station);

    /**
     * Метод, який викликається з контроллера для обробки запиту клієнта на
     * видачу списку колонок із пальним. Вилучає все пальне із бази даних по
     * параметру назви міста
     *
     * @param city - ім'я міста, по якому будуть вилучатися дані із бази
     * @return список вилучених колонок із пальним із бази даних по заданим
     * параметрам.
     */
    List<IPump> getPumpsByCity(String city);


    /**
     * Метод, який викликається з контроллера для обробки запиту клієнта на
     * видачу списку колонок із пальним. Вилучає все пальне із бази даних по
     * параметру назви заправної станції
     *
     * @param station - назва станції, по якій будуть вилучатися дані із бази
     * @return список вилучених колонок із пальним із бази даних по заданим
     * параметрам.
     */
    List<IPump> getPumpsByStation(String station);

}
